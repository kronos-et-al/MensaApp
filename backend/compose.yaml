services:
  mensa-app:
    image: ghcr.io/kronos-et-al/mensa-app
    #command: --migrate # only run for the first time to create initial database structure
    #command: --migrate-images # run once when migrating from flickr to local image solution
    ports:
      - 80:80
    environment: # please configure accordingly <------------------------------------------------------------
      - DATABASE_URL=postgres://postgres:secret_password@database/mensa_app # (a) only change password if wanted
      - SMTP_SERVER=<domain of mail server>
      - SMTP_PORT=<port of mail server>
      - SMTP_USERNAME=<username of mail server>
      - SMTP_PASSWORD=<password of mail server>
      - ADMIN_EMAIL=<email address admin notofocations should be send to>
      - GOOGLE_PROJECT_ID=<google project id for service account>
      - BASE_URL=<url where api is available>
      - TZ=Europe/Berlin
      - LOKI_URL=http://loki:3100
      - LOG_CONFIG=warn,mensa_app_backend=info # only applies for stderr log, not for loki
    volumes: # please configure accordingly <-----------------------------------------------------------
      - <image_path>:/data/images:rw
      - <service_account json>:/data/service_account.json:ro

    restart: unless-stopped
    depends_on:
      - database
  database:
    image: postgres:16
    volumes:
      - dbdata:/var/lib/postgresql/data # or specify path where your database should be stored
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret_password # (a) change here and above <------------------------------------------
      - POSTGRES_DB=mensa_app
      - TZ=Europe/Berlin
      - PGTZ=Europe/Berlin
    restart: unless-stopped
  admin:
    image: dpage/pgadmin4
    environment: # change <----------------------------------------------------------------------------------
      - PGADMIN_DEFAULT_EMAIL=
      - PGADMIN_DEFAULT_PASSWORD=
      - TZ=Europe/Berlin
    ports:
      - 8080:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    restart: unless-stopped
    depends_on:
      - database
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - "loki:/loki"
  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_PASSWORD=changeme  # change <-----------------------------------------------------------
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        mkdir -p /etc/grafana/provisioning/dashboards
        cat <<EOF > /etc/grafana/provisioning/dashboards/default.yaml
        apiVersion: 1
        providers:
          - name: Default
            folder: Services # The folder where to place the dashboards
            type: file
            options:
              path:
                /var/lib/grafana/dashboards
        EOF
        mkdir -p /var/lib/grafana/dashboards
        curl https://raw.githubusercontent.com/kronos-et-al/MensaApp/refs/heads/main/backend/grafana-dashboard.json > /var/lib/grafana/dashboards/logs.json
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana


volumes:
 dbdata:
 pgadmin:
 grafana:
 loki: